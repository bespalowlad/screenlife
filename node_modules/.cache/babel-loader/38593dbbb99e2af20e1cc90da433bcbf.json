{"remainingRequest":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/thread-loader/dist/cjs.js!/Users/apple/Desktop/dev/screenlife_frontend/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/dev/screenlife_frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/Desktop/dev/screenlife_frontend/src/components/store.js","dependencies":[{"path":"/Users/apple/Desktop/dev/screenlife_frontend/src/components/store.js","mtime":1561810688465},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport $api from '@/components/api.js';\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    feeds: [],\n    apps: [],\n    categories: [],\n    feedCategories: [],\n    awards: [],\n    articles: [],\n    main: {\n      isEmpty: true\n    },\n    seomain: [],\n    about: {\n      isEmpty: true\n    },\n    seoabout: [],\n    terms: {\n      isEmpty: true\n    },\n    seoterms: [],\n    privacy: {\n      isEmpty: true\n    },\n    seoprivacy: [],\n    awardsPage: {\n      isEmpty: true\n    },\n    seoAwardsPage: [],\n    apps_page: {\n      isEmpty: true\n    },\n    seoapps_page: [],\n    feedsLoaded: false,\n    appsLoaded: false,\n    categoriesLoaded: false,\n    feedCategoriesLoaded: false,\n    awardsLoaded: false,\n    articlesLoaded: false\n  },\n  mutations: {\n    SET_FEEDS: function SET_FEEDS(state, payload) {\n      state[payload.name] = payload.data;\n      state.feedsLoaded = true;\n    },\n    SET_APPS: function SET_APPS(state, payload) {\n      state[payload.name] = payload.data;\n      state.appsLoaded = true;\n    },\n    SET_ARTICLES: function SET_ARTICLES(state, payload) {\n      state[payload.name] = payload.data;\n      state.articlesLoaded = true;\n    },\n    SET_AWARDS: function SET_AWARDS(state, payload) {\n      state[payload.name] = payload.data;\n      state.awardsLoaded = true;\n    },\n    SET_CATEGORIES: function SET_CATEGORIES(state, payload) {\n      state[payload.name] = payload.data;\n      state.categoriesLoaded = true;\n    },\n    SET_FEED_CATEGORIES: function SET_FEED_CATEGORIES(state, payload) {\n      state[payload.name] = payload.data;\n      state.feedCategoriesLoaded = true;\n    },\n    SET_PAGE: function SET_PAGE(state, payload) {\n      state[payload.name] = payload.data;\n    },\n    SET_AWARDSPAGE: function SET_AWARDSPAGE(state, payload) {\n      state[payload.name] = payload.data;\n    }\n  },\n  getters: {\n    getArticleBySlug: function getArticleBySlug(state) {\n      return function (slug) {\n        return state.articles.find(function (item) {\n          return item.slug == slug;\n        }) || {};\n      };\n    },\n    getAppsByAward: function getAppsByAward(state) {\n      return function (id) {\n        return state.apps.filter(function (item) {\n          return item.acf.info.awards && item.acf.info.awards.ID == id;\n        });\n      };\n    },\n    getArticlesByAward: function getArticlesByAward(state) {\n      return function (id) {\n        return state.articles.filter(function (item) {\n          return item.acf.info.award == id;\n        }) || [];\n      };\n    },\n    getAppByArticle: function getAppByArticle(state) {\n      return function (id) {\n        var obj = state.articles.find(function (item) {\n          return item.id == id;\n        });\n\n        if (obj) {\n          var id2 = Number(obj.acf.info.apps_1[0]);\n          return state.apps.find(function (item) {\n            return item.id == id2;\n          });\n        }\n\n        return {};\n      };\n    },\n    // getAvailableAwards: state => {\n    //     return state.awards.filter(item => item.acf.info)\n    //     // let ids = [];\n    //     // state.awards.forEach(item => {\n    //     //     if (item.acf.info.awards && ids.indexOf(item.acf.info.awards.ID) == -1) {\n    //     //         ids.push(item.acf.info.awards.ID);\n    //     //     }\n    //     // });\n    //     // return state.awards.filter(item => {\n    //     //     return ids.indexOf(item.id) != -1;\n    //     // });\n    // },\n    getRelativeFeeds: function getRelativeFeeds(state) {\n      return function (category, feedId) {\n        // if (!category) return state.apps;\n        // let ids = [];\n        // let arr = state.apps.filter(item => item.apps_category[0] == category);\n        // arr.forEach(item => {\n        //     ids.push(item.id);\n        // });\n        // return state.feeds.filter(item => item.acf.settings.feed_card_type == '4' && ids.indexOf(Number(item.acf.content.apps_1[0].ID)) != -1).slice(0, 3);\n        // console.log(state.feeds.filter(item => item.acf.settings.feed_card_type == '4' && item.feed_category[0] == category).slice(0, 3));\n        return state.feeds.filter(function (item) {\n          return (item.acf.settings.feed_card_type == '4' || item.acf.settings.feed_card_type == '3' || item.acf.settings.feed_card_type == '2') && item.feed_category[0] == category && item.id != feedId;\n        }).slice(0, 3);\n      };\n    },\n    getAwardByApp: function getAwardByApp(state) {\n      return function (id) {\n        return state.awards.find(function (item) {\n          return item.acf.winners && item.acf.winners.indexOf(id) != -1;\n        });\n      };\n    },\n    getAwardById: function getAwardById(state) {\n      return function (id) {\n        return state.awards.find(function (item) {\n          return item.id == id;\n        });\n      };\n    },\n    getFeedBySlug: function getFeedBySlug(state) {\n      return function (slug) {\n        return state.feeds.find(function (item) {\n          return item.slug == slug;\n        }) || {};\n      };\n    },\n    getAppById: function getAppById(state) {\n      return function (id) {\n        return state.apps.find(function (item) {\n          return item.id == id;\n        }) || {};\n      };\n    },\n    getAppBySlug: function getAppBySlug(state) {\n      return function (slug) {\n        return state.apps.find(function (item) {\n          return item.slug == slug;\n        }) || {};\n      };\n    },\n    getCategoryById: function getCategoryById(state) {\n      return function (id) {\n        return state.categories.find(function (item) {\n          return item.id == id;\n        }) || {};\n      };\n    },\n    getLastWinner: function getLastWinner(state) {\n      return state.apps.filter(function (item) {\n        return item.acf.info.winner;\n      }).sort(function (a, b) {\n        return a.date - b.date;\n      })[0];\n    },\n    getArticleByApp: function getArticleByApp(state) {\n      return function (id) {\n        return state.articles.find(function (item) {\n          return item.acf.info.apps_1[0] == id;\n        });\n      };\n    },\n    getAvailableCategories: function getAvailableCategories(state) {\n      var arr = [];\n      var ids = [];\n      state.apps.forEach(function (item) {\n        if (ids.indexOf(item.apps_category[0]) == -1) {\n          ids.push(item.apps_category[0]);\n        }\n      });\n      ids.forEach(function (item) {\n        var obj = state.categories.find(function (c) {\n          return c.id == item;\n        });\n        if (obj) arr.push(obj);\n      });\n      return arr;\n    },\n    getCategoryIdBySlug: function getCategoryIdBySlug(state) {\n      return function (slug) {\n        return state.categories.find(function (item) {\n          return item.slug == slug;\n        }) || {};\n      };\n    },\n    getAppsByCategory: function getAppsByCategory(state) {\n      return function (id) {\n        if (!id) return state.apps;\n        return state.apps.filter(function (item) {\n          return item.apps_category[0] == id;\n        });\n      };\n    },\n    getFeedCategoryById: function getFeedCategoryById(state) {\n      return function (id) {\n        return state.feedCategories.find(function (item) {\n          return item.id == id;\n        }) || {};\n      };\n    }\n  },\n  actions: {\n    GET_FEEDS: function () {\n      var _GET_FEEDS = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return $api.feeds.get();\n\n              case 2:\n                _ref = _context.sent;\n                data = _ref.data;\n                context.commit('SET_FEEDS', {\n                  name: 'feeds',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GET_FEEDS(_x) {\n        return _GET_FEEDS.apply(this, arguments);\n      }\n\n      return GET_FEEDS;\n    }(),\n    GET_APPS: function () {\n      var _GET_APPS = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context) {\n        var _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return $api.apps.get();\n\n              case 2:\n                _ref2 = _context2.sent;\n                data = _ref2.data;\n                context.commit('SET_APPS', {\n                  name: 'apps',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function GET_APPS(_x2) {\n        return _GET_APPS.apply(this, arguments);\n      }\n\n      return GET_APPS;\n    }(),\n    GET_AWARDS: function () {\n      var _GET_AWARDS = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context) {\n        var _ref3, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return $api.awards.get();\n\n              case 2:\n                _ref3 = _context3.sent;\n                data = _ref3.data;\n                context.commit('SET_AWARDS', {\n                  name: 'awards',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function GET_AWARDS(_x3) {\n        return _GET_AWARDS.apply(this, arguments);\n      }\n\n      return GET_AWARDS;\n    }(),\n    GET_CATEGORIES: function () {\n      var _GET_CATEGORIES = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context) {\n        var _ref4, data;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return $api.categories.get();\n\n              case 2:\n                _ref4 = _context4.sent;\n                data = _ref4.data;\n                context.commit('SET_CATEGORIES', {\n                  name: 'categories',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function GET_CATEGORIES(_x4) {\n        return _GET_CATEGORIES.apply(this, arguments);\n      }\n\n      return GET_CATEGORIES;\n    }(),\n    GET_FEED_CATEGORIES: function () {\n      var _GET_FEED_CATEGORIES = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(context) {\n        var _ref5, data;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return $api.feedCategories.get();\n\n              case 2:\n                _ref5 = _context5.sent;\n                data = _ref5.data;\n                context.commit('SET_FEED_CATEGORIES', {\n                  name: 'feedCategories',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function GET_FEED_CATEGORIES(_x5) {\n        return _GET_FEED_CATEGORIES.apply(this, arguments);\n      }\n\n      return GET_FEED_CATEGORIES;\n    }(),\n    GET_PAGE: function () {\n      var _GET_PAGE = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(context, slug) {\n        var _ref6, data;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return $api.page.get(slug);\n\n              case 2:\n                _ref6 = _context6.sent;\n                data = _ref6.data;\n\n                if (slug == 'apps_page') {\n                  context.commit('SET_PAGE', {\n                    name: slug,\n                    data: data[0]\n                  });\n                  context.commit('SET_PAGE', {\n                    name: 'seo' + slug,\n                    data: data[0].yoast_meta\n                  });\n                } else {\n                  context.commit('SET_PAGE', {\n                    name: slug,\n                    data: data[0].acf\n                  });\n                  context.commit('SET_PAGE', {\n                    name: 'seo' + slug,\n                    data: data[0].yoast_meta\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function GET_PAGE(_x6, _x7) {\n        return _GET_PAGE.apply(this, arguments);\n      }\n\n      return GET_PAGE;\n    }(),\n    GET_AWARDSPAGE: function () {\n      var _GET_AWARDSPAGE = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(context) {\n        var _ref7, data;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return $api.awardsPage.get();\n\n              case 2:\n                _ref7 = _context7.sent;\n                data = _ref7.data;\n                context.commit('SET_AWARDSPAGE', {\n                  name: 'awardsPage',\n                  data: data[0].acf\n                });\n                context.commit('SET_AWARDSPAGE', {\n                  name: 'seoAwardsPage',\n                  data: data[0].yoast_meta\n                });\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function GET_AWARDSPAGE(_x8) {\n        return _GET_AWARDSPAGE.apply(this, arguments);\n      }\n\n      return GET_AWARDSPAGE;\n    }(),\n    GET_ARTICLES: function () {\n      var _GET_ARTICLES = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(context) {\n        var _ref8, data;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return $api.articles.get();\n\n              case 2:\n                _ref8 = _context8.sent;\n                data = _ref8.data;\n                context.commit('SET_ARTICLES', {\n                  name: 'articles',\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function GET_ARTICLES(_x9) {\n        return _GET_ARTICLES.apply(this, arguments);\n      }\n\n      return GET_ARTICLES;\n    }()\n  }\n});",{"version":3,"sources":["/Users/apple/Desktop/dev/screenlife_frontend/src/components/store.js"],"names":["Vue","Vuex","$api","use","store","Store","state","feeds","apps","categories","feedCategories","awards","articles","main","isEmpty","seomain","about","seoabout","terms","seoterms","privacy","seoprivacy","awardsPage","seoAwardsPage","apps_page","seoapps_page","feedsLoaded","appsLoaded","categoriesLoaded","feedCategoriesLoaded","awardsLoaded","articlesLoaded","mutations","SET_FEEDS","payload","name","data","SET_APPS","SET_ARTICLES","SET_AWARDS","SET_CATEGORIES","SET_FEED_CATEGORIES","SET_PAGE","SET_AWARDSPAGE","getters","getArticleBySlug","slug","find","item","getAppsByAward","id","filter","acf","info","ID","getArticlesByAward","award","getAppByArticle","obj","id2","Number","apps_1","getRelativeFeeds","category","feedId","settings","feed_card_type","feed_category","slice","getAwardByApp","winners","indexOf","getAwardById","getFeedBySlug","getAppById","getAppBySlug","getCategoryById","getLastWinner","winner","sort","a","b","date","getArticleByApp","getAvailableCategories","arr","ids","forEach","apps_category","push","c","getCategoryIdBySlug","getAppsByCategory","getFeedCategoryById","actions","GET_FEEDS","context","get","commit","GET_APPS","GET_AWARDS","GET_CATEGORIES","GET_FEED_CATEGORIES","GET_PAGE","page","yoast_meta","GET_AWARDSPAGE","GET_ARTICLES"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport $api from '@/components/api.js';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n    state: {\n        feeds: [],\n        apps: [],\n        categories: [],\n        feedCategories: [],\n        awards: [],\n        articles: [],\n        main: {\n            isEmpty: true\n        },\n        seomain: [],\n        about: {\n            isEmpty: true\n        },\n        seoabout: [],\n        terms: {\n            isEmpty: true\n        },\n        seoterms: [],\n        privacy: {\n            isEmpty: true\n        },\n        seoprivacy: [],\n        awardsPage: {\n            isEmpty: true\n        },\n        seoAwardsPage: [],\n        apps_page: {\n            isEmpty: true\n        },\n        seoapps_page: [],\n        feedsLoaded: false,\n        appsLoaded: false,\n        categoriesLoaded: false,\n        feedCategoriesLoaded: false,\n        awardsLoaded: false,\n        articlesLoaded: false,\n    },\n    mutations: {\n        SET_FEEDS: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.feedsLoaded = true;\n        },\n        SET_APPS: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.appsLoaded = true;\n        },\n        SET_ARTICLES: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.articlesLoaded = true;\n        },\n        SET_AWARDS: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.awardsLoaded = true;\n        },\n        SET_CATEGORIES: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.categoriesLoaded = true;\n        },\n        SET_FEED_CATEGORIES: (state, payload) => {\n            state[payload.name] = payload.data;\n            state.feedCategoriesLoaded = true;\n        },\n        SET_PAGE: (state, payload) => {\n            state[payload.name] = payload.data;\n        },\n        SET_AWARDSPAGE: (state, payload) => {\n            state[payload.name] = payload.data;\n        }\n    },\n    getters: {\n        getArticleBySlug: state => slug => {\n            return state.articles.find(item => item.slug == slug) || {};\n        },\n        getAppsByAward: state => id => {\n            return state.apps.filter(item => {\n                return item.acf.info.awards && item.acf.info.awards.ID == id;\n            });\n        },\n        getArticlesByAward: state => id => {\n            return state.articles.filter(item => item.acf.info.award == id) || [];\n        },\n        getAppByArticle: state => id => {\n            let obj = state.articles.find(item =>item.id == id);\n            if (obj) {\n                let id2 = Number(obj.acf.info.apps_1[0]);\n                return state.apps.find(item => item.id == id2);\n            }\n            return {};\n        },\n        // getAvailableAwards: state => {\n        //     return state.awards.filter(item => item.acf.info)\n        //     // let ids = [];\n        //     // state.awards.forEach(item => {\n        //     //     if (item.acf.info.awards && ids.indexOf(item.acf.info.awards.ID) == -1) {\n        //     //         ids.push(item.acf.info.awards.ID);\n        //     //     }\n        //     // });\n        //     // return state.awards.filter(item => {\n        //     //     return ids.indexOf(item.id) != -1;\n        //     // });\n        // },\n        getRelativeFeeds: state => (category, feedId) => {\n            // if (!category) return state.apps;\n            // let ids = [];\n            // let arr = state.apps.filter(item => item.apps_category[0] == category);\n            // arr.forEach(item => {\n            //     ids.push(item.id);\n            // });\n            // return state.feeds.filter(item => item.acf.settings.feed_card_type == '4' && ids.indexOf(Number(item.acf.content.apps_1[0].ID)) != -1).slice(0, 3);\n            // console.log(state.feeds.filter(item => item.acf.settings.feed_card_type == '4' && item.feed_category[0] == category).slice(0, 3));\n            return state.feeds.filter(item => (item.acf.settings.feed_card_type == '4' || item.acf.settings.feed_card_type == '3' || item.acf.settings.feed_card_type == '2') && item.feed_category[0] == category && item.id != feedId).slice(0, 3);\n        },\n        getAwardByApp: state => id => {\n            return state.awards.find(item => item.acf.winners && item.acf.winners.indexOf(id) != -1);\n        },\n        getAwardById: state => id => {\n            return state.awards.find(item => item.id == id);\n        },\n        getFeedBySlug: state => slug => {\n            return state.feeds.find(item => item.slug == slug) || {};\n        },\n        getAppById: state => id => {\n            return state.apps.find(item => item.id == id) || {};\n        },\n        getAppBySlug: state => slug => {\n            return state.apps.find(item => item.slug == slug) || {};\n        },\n        getCategoryById: state => id => {\n            return state.categories.find(item => item.id == id) || {};\n        },\n        getLastWinner: state => {\n            return state.apps.filter(item => item.acf.info.winner).sort((a, b) => a.date - b.date)[0];\n        },\n        getArticleByApp: state => id => {\n            return state.articles.find(item => item.acf.info.apps_1[0] == id);\n        },\n        getAvailableCategories: state => {\n            let arr = [];\n            let ids = [];\n            state.apps.forEach(item => {\n                if (ids.indexOf(item.apps_category[0]) == -1) {\n                    ids.push(item.apps_category[0]);\n                }\n            });\n\n            ids.forEach(item => {\n                let obj = state.categories.find(c => c.id == item);\n                if (obj) arr.push(obj);\n            });\n\n            return arr;\n        },\n        getCategoryIdBySlug: state => slug => {\n            return state.categories.find(item => item.slug == slug) || {};\n        },\n        getAppsByCategory: state => id => {\n            if (!id) return state.apps;\n            return state.apps.filter(item => item.apps_category[0] == id);\n        },\n        getFeedCategoryById: state => id => {\n            return state.feedCategories.find(item => item.id == id) || {};\n        }\n    },\n\tactions: {\n        GET_FEEDS: async (context) => {\n            let {data} = await $api.feeds.get();\n            context.commit('SET_FEEDS', {name: 'feeds', data: data});\n        },\n        GET_APPS: async (context) => {\n            let {data} = await $api.apps.get();\n            context.commit('SET_APPS', {name: 'apps', data: data});\n        },\n        GET_AWARDS: async (context) => {\n            let {data} = await $api.awards.get();\n            context.commit('SET_AWARDS', {name: 'awards', data: data});\n        },\n        GET_CATEGORIES: async (context) => {\n            let {data} = await $api.categories.get();\n            context.commit('SET_CATEGORIES', {name: 'categories', data: data});\n        },\n        GET_FEED_CATEGORIES: async (context) => {\n            let {data} = await $api.feedCategories.get();\n            context.commit('SET_FEED_CATEGORIES', {name: 'feedCategories', data: data});\n        },\n        GET_PAGE: async (context, slug) => {\n            let {data} = await $api.page.get(slug);\n            if (slug == 'apps_page') {\n                context.commit('SET_PAGE', {name: slug, data: data[0]});\n                context.commit('SET_PAGE', {name: 'seo' + slug, data: data[0].yoast_meta});\n            } else {\n                context.commit('SET_PAGE', {name: slug, data: data[0].acf});\n                context.commit('SET_PAGE', {name: 'seo' + slug, data: data[0].yoast_meta});\n            }\n        },\n        GET_AWARDSPAGE: async (context) => {\n            let {data} = await $api.awardsPage.get();\n            context.commit('SET_AWARDSPAGE', {name: 'awardsPage', data: data[0].acf});\n            context.commit('SET_AWARDSPAGE', {name: 'seoAwardsPage', data: data[0].yoast_meta});\n        },\n        GET_ARTICLES: async (context) => {\n            let {data} = await $api.articles.get();\n            context.commit('SET_ARTICLES', {name: 'articles', data: data});\n        }\n    }\n});"]}]}