{"remainingRequest":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/Desktop/dev/screenlife_frontend/node_modules/pug-plain-loader/index.js!/Users/apple/Desktop/dev/screenlife_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/dev/screenlife_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/dev/screenlife_frontend/src/blocks/about/form.vue?vue&type=template&id=3a3f57b4&scoped=true&lang=pug&","dependencies":[{"path":"/Users/apple/Desktop/dev/screenlife_frontend/src/blocks/about/form.vue","mtime":1563371937265},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/pug-plain-loader/index.js","mtime":1521946589000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/dev/screenlife_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"form\", attrs: { \"data-aos\": \"fade-up\" } }, [\n    _c(\"div\", { staticClass: \"wrapper\" }, [\n      _c(\n        \"form\",\n        {\n          staticClass: \"form-questions\",\n          attrs: { name: \"form-questions\" },\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.onSubmit()\n            }\n          }\n        },\n        [\n          _c(\"h2\", { staticClass: \"form-questions__title\" }, [\n            _vm._v(_vm._s(_vm.$ml.get(\"forms.request_title\")))\n          ]),\n          _c(\"div\", { staticClass: \"form-questions__fields\" }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"fieldset fieldset-name\",\n                class: { \"has-error\": !_vm.nameValid }\n              },\n              [\n                _c(\"v-input\", {\n                  attrs: {\n                    lightColor: \"\",\n                    label: _vm.$ml.get(\"forms.name\"),\n                    isValid: _vm.nameValid,\n                    type: \"text\",\n                    name: \"name\"\n                  },\n                  on: {\n                    keyup: function($event) {\n                      _vm.nameValid = true\n                    },\n                    click: function($event) {\n                      _vm.nameValid = true\n                    },\n                    mouseover: function($event) {\n                      _vm.nameValid = true\n                    }\n                  },\n                  model: {\n                    value: _vm.name,\n                    callback: function($$v) {\n                      _vm.name = $$v\n                    },\n                    expression: \"name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              {\n                staticClass: \"fieldset fieldset-message\",\n                class: { \"has-error\": !_vm.messageValid }\n              },\n              [\n                _c(\"v-textarea\", {\n                  attrs: {\n                    maxHeight: 90,\n                    lightColor: \"\",\n                    label: _vm.$ml.get(\"forms.message\"),\n                    isValid: _vm.messageValid,\n                    name: \"message\"\n                  },\n                  on: {\n                    value: _vm.checkMessage,\n                    keyup: function($event) {\n                      _vm.messageValid = true\n                    },\n                    click: function($event) {\n                      _vm.messageValid = true\n                    },\n                    mouseover: function($event) {\n                      _vm.messageValid = true\n                    }\n                  },\n                  model: {\n                    value: _vm.message,\n                    callback: function($$v) {\n                      _vm.message = $$v\n                    },\n                    expression: \"message\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              {\n                staticClass: \"fieldset fieldset-email\",\n                class: { \"has-error\": !_vm.nameValid }\n              },\n              [\n                _c(\"v-input\", {\n                  attrs: {\n                    lightColor: \"\",\n                    label: _vm.$ml.get(\"forms.email\"),\n                    isValid: _vm.emailValid,\n                    type: \"email\",\n                    name: \"email\"\n                  },\n                  on: {\n                    keyup: function($event) {\n                      _vm.emailValid = true\n                    },\n                    click: function($event) {\n                      _vm.emailValid = true\n                    },\n                    mouseover: function($event) {\n                      _vm.emailValid = true\n                    }\n                  },\n                  model: {\n                    value: _vm.email,\n                    callback: function($$v) {\n                      _vm.email = $$v\n                    },\n                    expression: \"email\"\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _c(\"button\", { attrs: { type: \"submit\", name: \"submit\" } }, [\n            _c(\"span\", [_vm._v(_vm._s(_vm.$ml.get(\"btns.send\")))])\n          ]),\n          _c(\"widget\", { attrs: { static: \"\" } })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}